#!/bin/bash

DEFAULT_CONF=~/.aurrepo

function usage {
  echo -e $"\
    AurUpdate -- simple AUR repo updater.
  Usage: $(basename $0) CONF_FILE; updates repo described in CONF_FILE,\n\
    if no specified uses $DEFAULT_CONF;\n\
      GNU GPL'ed by Mateusz Machalica 2012\
      "
  exit 0
}

function status {
  echo "$(tput bold)$(tput setaf 5)==> $(tput sgr0)$(tput bold)${1}$(tput sgr0)"
}

function fail {
  echo "$(tput bold)$(tput setaf 2)==> $(tput sgr0)$(tput bold)${1}$(tput sgr0)"
  exit 1
}

function check_update {
  AUR_DIR="http://aur.archlinux.org/packages/"

  Pkgbuild=$(wget -q -O - "${AUR_DIR}${1:0:2}/${1}/PKGBUILD" | grep 'pkg')
  Ver=$(echo "$Pkgbuild" | grep -m 1 'pkgver=' | cut -d '=' -f 2)
  Rel=$(echo "$Pkgbuild" | grep -m 1 'pkgrel=' | cut -d '=' -f 2)
  Installed=$(pacman -Q "$1" 2> /dev/null | cut -d ' ' -f 2)

  case $Ver-$Rel in
    "$Installed")
      return 1
      ;;
    *)
      return 0
      ;;
  esac
}

BORN_CWD=$(pwd)

if [[ "$#" -eq 1 ]]; then
  source "$1"
  shift
elif [[ "$#" -eq 0 ]]; then
  source $DEFAULT_CONF
else
  usage
fi

[[ -d "$REPO_PATH" ]] || fail "No such directory."
[[ -z "$REPO_DB" ]] && fail "Empty repo db name."


cd "$REPO_PATH"

rm -f "$REPO_DB"

rm -f *.pkg.*

for pkg in "${PACKAGES[@]}"; do
  if check_update "$pkg"; then
    status "Package $pkg needs update." 
    aurmake "$pkg"
  else
    status "Package $pkg already up-to-date." 
  fi
done

touch "$REPO_DB"
ln -f -s "$REPO_DB" "${REPO_DB/.tar*/}"
repo-add "$REPO_DB" *.pkg.* 2> /dev/null

cd $BORN_CWD

